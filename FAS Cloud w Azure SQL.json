{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  
  "parameters": {
	"deploymentName": {
		"defaultValue": "f2",
		"type": "string",
		"metadata": {
			"description": "Name/Initial of FA Deployment. A-Z, a-z, 0-9 only."			
	  }
	},
    "vnetOctet": {
      "type": "string",
      "defaultValue": "29",
      "metadata": {
        "description": "Defines 2nd octet of subnet - 172.X.0.0; Replace X with what?"
      }
    },
	"vmSize": {
      "type": "string",
	   "defaultValue": "Standard_E2_v3",
		"metadata": {
			"description": "VIrtual machine size."
		}
    },		
	"adminPassword": {
		"type": "securestring",
		"defaultValue": "P@ssw0rdP@ssw0rd",
		"metadata": {
			"description": "FASAdmin Password for the Virtual Machine."
		}
    },
	"sqlPassword": {
		"type": "securestring",
		"defaultValue": "P@ssw0rdP@ssw0rd",
		"metadata": {
			"description": "Password for the SQL Server admin account."
		}
    },
	"UserPassword": {
		"type": "securestring",
		"defaultValue": "create new p@ssw0rd",
		"metadata": {
			"description": "Password for the Domain user accounts."
		}
	},
	"sqlServicePassword": {
		"type": "securestring",
		"defaultValue": "P@ssw0rdP@ssw0rd",
		"metadata": {
			"description": "Password for the SQLAdmin service account."
		}
    },
	"FASServicePassword": {
		"type": "securestring",
		"defaultValue": "create new p@ssw0rd",
		"metadata": {
			"description": "Password for the FAS_SERVICE service account."
		}
	},
	"PRODServicePassword": {
		"type": "securestring",
		"defaultValue": "create new p@ssw0rd",
		"metadata": {
			"description": "Password for the PRODTEAMADMIN service account."
		}
	},
	"LDAPServicePassword": {
		"type": "securestring",
		"defaultValue": "create new p@ssw0rd",
		"metadata": {
			"description": "Password for the LDAP_BIND_USER service account."
		}
	},
	"VPNServicePassword": {
		"type": "securestring",
		"defaultValue": "create new p@ssw0rd",
		"metadata": {
			"description": "Password for the VPNADMIN service account."
		}
    },	
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    }
  },
  "variables": {
	"vmName": "[concat(parameters('deploymentName'), '-app-vm')]",
	"dnsLabelPrefix": "[concat(parameters('deploymentName'), '-app-vm-pip')]",
	"storageAccountName": "[concat(parameters('deploymentName'), 'sa')]",
	"storageAccountType": "Standard_LRS",
	"adminUsername": "FASAdmin",
	"vnetName": "[concat(parameters('deploymentName'), '-app-vnet')]",
	"subnet1Name": "Default",
	"windowsOSVersion": "2016-Datacenter",
	"vnetAddressPrefix": "[concat('172.',parameters('vnetOctet'),'.0.0/24')]",
	"subnet1Prefix": "[concat('172.',parameters('vnetOctet'),'.0.0/25')]",
	"privateIPAddress": "[concat('172.',parameters('vnetOctet'),'.0.4')]",
	"nicName": "[concat(parameters('deploymentName'), '-app-vm-nic')]",
	"vaultName": "[concat(parameters('deploymentName'), '-rsv')]",
	"vaultskutier": "Standard",
	"backupFabric": "Azure",
	"protectionContainer": "[concat('iaasvmcontainer;iaasvmcontainerv2;', resourceGroup().name, ';', variables('vmName'))]",
    "protectedItem": "[concat('vm;iaasvmcontainerv2;', resourceGroup().name, ';', variables('vmName'))]",
	"subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vNetName'), variables('subnet1Name'))]",
	"domainName": "[concat(parameters('deploymentName'),'.fascloud.com')]",
	"artifactsLocation": "https://raw.githubusercontent.com/mcs1970/forensicAdvantage/DCS/",
	"transparentDataEncryption": "enabled",
	"sqlServerName": "[concat(parameters('deploymentName'), '-sqlserver')]",
	"elasticPoolName": "[concat(parameters('deploymentName'), '-epool')]",
	"edition": "Basic",
	"poolDtu": "50",
	"databaseDtuMin": "0",
	"databaseDtuMax": "5",
	"databaseName1": "[concat(parameters('deploymentName'), '-stage-core-db')]",
	"databaseName2": "[concat(parameters('deploymentName'), '-stage-or-db')]",
	"databaseCollation": "SQL_Latin1_General_CP1_CI_AS",
    "accountid": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name , '/providers/','Microsoft.Storage/storageAccounts/', variables('StorageAccountName'))]",
    "wadlogs": "<WadCfg> <DiagnosticMonitorConfiguration overallQuotaInMB=\"4096\" xmlns=\"http://schemas.microsoft.com/ServiceHosting/2010/10/DiagnosticsConfiguration\"> <DiagnosticInfrastructureLogs scheduledTransferLogLevelFilter=\"Error\"/> <WindowsEventLog scheduledTransferPeriod=\"PT1M\" > <DataSource name=\"Application!*[System[(Level = 1 or Level = 2)]]\" /> <DataSource name=\"Security!*[System[(Level = 1 or Level = 2)]]\" /> <DataSource name=\"System!*[System[(Level = 1 or Level = 2)]]\" /></WindowsEventLog>",
    "wadperfcounters1": "<PerformanceCounters scheduledTransferPeriod=\"PT1M\"><PerformanceCounterConfiguration counterSpecifier=\"\\Processor(_Total)\\% Processor Time\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"CPU utilization\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Processor(_Total)\\% Privileged Time\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"CPU privileged time\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Processor(_Total)\\% User Time\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"CPU user time\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Processor Information(_Total)\\Processor Frequency\" sampleRate=\"PT15S\" unit=\"Count\"><annotation displayName=\"CPU frequency\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\System\\Processes\" sampleRate=\"PT15S\" unit=\"Count\"><annotation displayName=\"Processes\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Process(_Total)\\Thread Count\" sampleRate=\"PT15S\" unit=\"Count\"><annotation displayName=\"Threads\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Process(_Total)\\Handle Count\" sampleRate=\"PT15S\" unit=\"Count\"><annotation displayName=\"Handles\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\% Committed Bytes In Use\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"Memory usage\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\Available Bytes\" sampleRate=\"PT15S\" unit=\"Bytes\"><annotation displayName=\"Memory available\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\Committed Bytes\" sampleRate=\"PT15S\" unit=\"Bytes\"><annotation displayName=\"Memory committed\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\Commit Limit\" sampleRate=\"PT15S\" unit=\"Bytes\"><annotation displayName=\"Memory commit limit\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\% Disk Time\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"Disk active time\" locale=\"en-us\"/></PerformanceCounterConfiguration>",
    "wadperfcounters2": "<PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\% Disk Read Time\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"Disk active read time\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\% Disk Write Time\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"Disk active write time\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\Disk Transfers/sec\" sampleRate=\"PT15S\" unit=\"CountPerSecond\"><annotation displayName=\"Disk operations\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\Disk Reads/sec\" sampleRate=\"PT15S\" unit=\"CountPerSecond\"><annotation displayName=\"Disk read operations\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\Disk Writes/sec\" sampleRate=\"PT15S\" unit=\"CountPerSecond\"><annotation displayName=\"Disk write operations\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\Disk Bytes/sec\" sampleRate=\"PT15S\" unit=\"BytesPerSecond\"><annotation displayName=\"Disk speed\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\Disk Read Bytes/sec\" sampleRate=\"PT15S\" unit=\"BytesPerSecond\"><annotation displayName=\"Disk read speed\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\Disk Write Bytes/sec\" sampleRate=\"PT15S\" unit=\"BytesPerSecond\"><annotation displayName=\"Disk write speed\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\LogicalDisk(_Total)\\% Free Space\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"Disk free space (percentage)\" locale=\"en-us\"/></PerformanceCounterConfiguration></PerformanceCounters>",
    "wadcfgxstart": "[concat(variables('wadlogs'), variables('wadperfcounters1'), variables('wadperfcounters2'), '<Metrics resourceId=\"')]",
    "wadmetricsresourceid": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name , '/providers/', 'Microsoft.Compute/virtualMachines/')]",
    "wadcfgxend": "\"><MetricAggregation scheduledTransferPeriod=\"PT1H\"/><MetricAggregation scheduledTransferPeriod=\"PT1M\"/></Metrics></DiagnosticMonitorConfiguration></WadCfg>",
	"timeZone": "Eastern Standard Time",
	"networkSecurityGroupName": "[concat(parameters('deploymentName'), '-nsg')]",
	"rootDN": "[concat('DC=', parameters('deploymentName'),',DC=fascloud,DC=com')]"
  },
  
  "resources": [
	{
	  "name": "[variables('vaultName')]",
      "type": "Microsoft.RecoveryServices/vaults",
      "apiVersion": "2018-01-10",
      "location": "[parameters('location')]",
      "sku": {
		"name": "[variables('vaultskutier')]"
      },
	  "properties": {}
    },
	{
		"name": "[variables('storageAccountName')]",
		"apiVersion": "2018-07-01",
		"type": "Microsoft.Storage/storageAccounts",
		"location": "[parameters('location')]",
		"sku": {
			"name": "[variables('storageAccountType')]"
			},
			"kind": "StorageV2",
			"properties": {},
		"resources": [
                {
                    "name": "[concat('default/', 'sqldbauditlogs')]",
                    "type": "blobServices/containers",
                    "apiVersion": "2018-03-01-preview",
                    "dependsOn": [
                        "[variables('storageAccountName')]"
                    ]
                }
            ]
	},	  
	{
      "apiVersion": "2016-06-01",
      "name": "[concat(variables('vaultName'), '/', 'fas-vm-Policy')]",
      "type": "Microsoft.RecoveryServices/vaults/backupPolicies",
      "dependsOn": [
        "[concat('Microsoft.RecoveryServices/vaults/', variables('vaultName'))]"
      ],
      "location": "[parameters('location')]",
      "properties": {
        "backupManagementType": "AzureIaasVM",
        "schedulePolicy": {
          "scheduleRunFrequency": "Daily",
          "scheduleRunDays": null,
          "scheduleRunTimes": ["19:00"],
          "schedulePolicyType": "SimpleSchedulePolicy"
        },
        "retentionPolicy": {
          "dailySchedule": {
            "retentionTimes": ["19:00"],
            "retentionDuration": {
              "count": "14",
              "durationType": "Days"
            }
          },
          "weeklySchedule": {
            "daysOfTheWeek": ["Sunday"],
            "retentionTimes": ["19:00"],
            "retentionDuration": {
              "count": "6",
              "durationType": "Weeks"
            }
          },
          "monthlySchedule": {
            "retentionScheduleFormatType": "Daily",
            "retentionScheduleDaily": {
              "daysOfTheMonth": [
                {
                  "date": 1,
                  "isLast": false
                }
              ]
            },
            "retentionScheduleWeekly": null,
            "retentionTimes": ["19:00"],
            "retentionDuration": {
              "count": "6",
              "durationType": "Months"
            }
          },
          "retentionPolicyType": "LongTermRetentionPolicy"
        },
        "timeZone": "[variables('timeZone')]"
      }
    },  
	{
      "name": "[variables('dnsLabelPrefix')]",
	  "type": "Microsoft.Network/publicIPAddresses",
      "location": "[parameters('location')]",
      "apiVersion": "2018-10-01",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsLabelPrefix')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": [
			{
            "name": "allow_https",
            "properties": {
              "description": "Allow inbound HTTPS traffic",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "443",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
							}
			},
			{
            "name": "deny_rdp",
            "properties": {
              "description": "Deny inbound RDP traffic",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 110,
              "direction": "Inbound"
							}
			}
		  ]
		}
	},	
	{
      "name": "[variables('vnetName')]",
	  "apiVersion": "2018-10-01",
      "type": "Microsoft.Network/virtualNetworks",
      "location": "[parameters('location')]",
	  "dependsOn": [
			"[resourceId('Microsoft.Network/networkSecurityGroups/', variables('networkSecurityGroupName'))]"
					],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('vnetAddressPrefix')]"
          ]
        },
		  "dhcpOptions": {
          "dnsServers": "[variables('privateIPAddress')]"
		}
      },
      "resources": [
        {
          "name": "[variables('subnet1Name')]",
		  "apiVersion": "2018-10-01",
          "type": "subnets",
          "location": "[parameters('location')]",
          "dependsOn": [
            "[resourceId('Microsoft.Network/virtualNetworks/', variables('vnetName'))]"
						],
          "properties": {
            "addressPrefix": "[variables('subnet1Prefix')]",
			 "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
				}
          }
        }
      ]
	},
	{
      "name": "[variables('nicName')]",
	  "type": "Microsoft.Network/networkInterfaces",
      "location": "[parameters('location')]",
      "apiVersion": "2018-08-01",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses/', variables('dnsLabelPrefix'))]",
        "[resourceId('Microsoft.Network/virtualNetworks/', variables('vNetName'))]",
		"[variables('subnet1Name')]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
			  "privateIPAddress": "[variables('privateIPAddress')]",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('dnsLabelPrefix'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
	{
      "name": "[variables('vmName')]",
	  "type": "Microsoft.Compute/virtualMachines",
      "location": "[parameters('location')]",
      "apiVersion": "2018-10-01",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[resourceId('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[variables('vmName')]",
          "adminUsername": "[variables('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
		  "windowsConfiguration": {
            "timeZone": "[variables('timeZone')]"
			}
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "[variables('windowsOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
			"name": "[concat(variables('vmName'),'_OSDisk')]",
            "caching": "ReadWrite",
            "createOption": "FromImage",
			"managedDisk": {
				"storageAccountType": "Premium_LRS"
				}
          },
          "dataDisks": [
            {
              "name": "[concat(variables('vmName'),'_DataDisk')]",
			  "diskSizeGB": 127,
              "lun": 0,
              "createOption": "Empty",
			  "managedDisk": {
				"storageAccountType": "Premium_LRS"
				}
            }
          ]
        },
		"networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[concat('http://', variables('StorageAccountName'), '.blob.core.windows.net')]"
          }
        }
      },
      "resources": [
        {
          "name": "Microsoft.Insights.VMDiagnosticsSettings",
          "type": "extensions",
          "location": "[parameters('location')]",
          "apiVersion": "2015-06-15",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
          ],
          "tags": {
            "displayName": "AzureDiagnostics"
          },
          "properties": {
            "publisher": "Microsoft.Azure.Diagnostics",
            "type": "IaaSDiagnostics",
            "typeHandlerVersion": "1.5",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "xmlCfg": "[base64(concat(variables('wadcfgxstart'), variables('wadmetricsresourceid'), variables('vmName'), variables('wadcfgxend')))]",
              "storageAccount": "[variables('StorageAccountName')]"
            },
            "protectedSettings": {
              "storageAccountName": "[variables('StorageAccountName')]",
              "storageAccountKey": "[listkeys(variables('accountid'), '2015-06-15').key1]",
              "storageAccountEndPoint": "https://core.windows.net"
            }
          }
        },
            {
                    "type": "extensions",
                    "name": "CreateADForest",
                    "apiVersion": "2017-03-30",
                    "location": "[parameters('location')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', variables('vmName'))]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.Powershell",
                        "type": "DSC",
                        "typeHandlerVersion": "2.19",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                            "ModulesUrl": "[concat(variables('artifactsLocation'), 'CreateADPDC.zip')]",
                            "ConfigurationFunction": "CreateADPDC.ps1\\CreateADPDC",
                            "Properties": {
                                "DomainName": "[variables('domainName')]",
								"RootDN": "[variables('RootDN')]",
								"dName": "[parameters('deploymentName')]",
								"AdminCreds": {
                                    "UserName": "[variables('adminUsername')]",
                                    "Password": "PrivateSettingsRef:AdminPassword"
                                },
								"UserPassword": {
                                    "UserName": "[variables('adminUsername')]",
                                    "Password": "PrivateSettingsRef:UserPassword"
                                },
								"FASServicePassword": {
                                    "UserName": "[variables('adminUsername')]",
                                    "Password": "PrivateSettingsRef:FASServicePassword"
                                },
								"SQLServicePassword": {
                                    "UserName": "[variables('adminUsername')]",
                                    "Password": "PrivateSettingsRef:SQLServicePassword"
                                },
								"PRODServicePassword": {
                                    "UserName": "[variables('adminUsername')]",
                                    "Password": "PrivateSettingsRef:PRODServicePassword"
                                },
								"LDAPServicePassword": {
                                    "UserName": "[variables('adminUsername')]",
                                    "Password": "PrivateSettingsRef:LDAPServicePassword"
                                },
								"VPNServicePassword": {
                                    "UserName": "[variables('adminUsername')]",
                                    "Password": "PrivateSettingsRef:VPNServicePassword"
                                }
							}
                        },
                        "protectedSettings": {
							"Items": {
                                "AdminPassword": "[parameters('adminPassword')]",
                                "UserPassword": "[parameters('userPassword')]",
								"FASServicePassword": "[parameters('FASservicePassword')]",
								"SQLServicePassword": "[parameters('SQLservicePassword')]",
								"PRODServicePassword": "[parameters('PRODservicePassword')]",
								"LDAPServicePassword": "[parameters('LDAPservicePassword')]",
								"VPNServicePassword": "[parameters('VPNservicePassword')]"
								}
							}
					}
            }
		]
	},
	{
		"name": "[concat(variables('vaultName'), '/', variables('backupFabric'), '/', variables('protectionContainer'), '/', variables('protectedItem'))]",
		"type": "Microsoft.RecoveryServices/vaults/backupFabrics/protectionContainers/protectedItems",
		"apiVersion": "2016-12-01",
		"location": "[parameters('location')]",
		"dependsOn": [
				"[resourceId('Microsoft.Compute/virtualMachines/', variables('vmName'))]",
				"[resourceId('Microsoft.RecoveryServices/vaults/', variables('vaultName'))]"
      ],
		"properties": {
			"backupManagementType" : "AzureIaasVM",
			"workloadType": "VM",
			"protectedItemType": "Microsoft.Compute/virtualMachines",
			"policyId": "[resourceId('Microsoft.RecoveryServices/vaults/backupPolicies', variables('vaultName'), 'FAS-VM-Policy')]",
			"sourceResourceId": "[resourceId('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      }
    },
	{
      "name": "[variables('sqlserverName')]",
	  "apiVersion": "2014-04-01",
      "location": "[parameters('location')]",
      "type": "Microsoft.Sql/servers",
      "properties": {
        "administratorLogin": "[variables('adminUserName')]",
        "administratorLoginPassword": "[parameters('sqlPassword')]",
        "version": "12.0"
      }
    },
	{
      "name": "[concat(variables('sqlserverName'), '/', variables('elasticPoolName'))]",
	  "apiVersion": "2014-04-01",
	  "type": "Microsoft.Sql/servers/elasticPools",
      "dependsOn": [
        "[concat('Microsoft.Sql/servers/', variables('sqlserverName'))]"
      ],
      "location": "[parameters('location')]",  
      "properties": {
        "edition": "[variables('edition')]",
        "dtu": "[variables('poolDtu')]",
        "databaseDtuMin": "[variables('databaseDtuMin')]",
        "databaseDtuMax": "[variables('databaseDtuMax')]"
      }
    },
	{
      "name": "[concat(variables('sqlServerName'), '/', variables('databaseName1'))]",
	  "type": "Microsoft.Sql/servers/databases",
      "location": "[parameters('location')]",
      "apiVersion": "2014-04-01",
      "dependsOn": [
        "[concat('Microsoft.Sql/servers/', variables('sqlserverName'))]",
        "[concat('Microsoft.Sql/servers/', variables('sqlserverName') ,'/elasticpools/', variables('elasticPoolName'))]"
      ],
      "properties": {
        "collation": "[variables('databaseCollation')]",
        "requestedServiceObjectiveName": "ElasticPool",
        "elasticPoolName": "[variables('elasticPoolName')]"
      },
	   "resources": [
			 {
              "name": "default",
              "type": "backupLongTermRetentionPolicies",
              "dependsOn": [
                "[concat('Microsoft.Sql/servers/', variables('sqlServerName'), '/', 'databases', '/', variables('databaseName1'))]"
              ],
              "apiVersion": "2017-03-01-preview",
              "properties": {
                "weeklyRetention": "P5W",
                "monthlyRetention": "P12M",
                "yearlyRetention": "P5Y",
                "weekOfYear": 1
              }
            },
			{ 
				"apiVersion": "2015-05-01-preview", 
				"type": "auditingSettings", 
				"name": "default", 
				"location": "[parameters('location')]", 
				"dependsOn": [ 
					"[concat('Microsoft.Sql/servers/',variables('sqlServerName'))]", 
					"[concat('Microsoft.Sql/servers/',variables('sqlServerName'), '/databases/',variables('databaseName1'))]",		
					"[concat('Microsoft.Storage/storageAccounts/',variables('storageAccountName'))]" 
					], 
				"properties": { 
					"State": "Enabled", 
					"storageEndpoint": "[concat('https://',variables('storageAccountName'),'.blob.core.windows.net')]", 
					"storageAccountAccessKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value]", 
					"retentionDays": 0, 
					"auditActionsAndGroups": [ "SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP", "DATABASE_LOGOUT_GROUP", "USER_CHANGE_PASSWORD_GROUP" ], 
					"storageAccountSubscriptionId": "[subscription().subscriptionId]", 
					"isStorageSecondaryKeyInUse": false 
					} 
			}			
		]	  
    },
	{
      "name": "[concat(variables('sqlServerName'), '/', variables('databaseName2'))]",
	  "type": "Microsoft.Sql/servers/databases",
      "location": "[parameters('location')]",
      "apiVersion": "2014-04-01",
      "dependsOn": [
        "[concat('Microsoft.Sql/servers/', variables('sqlserverName'))]",
        "[concat('Microsoft.Sql/servers/', variables('sqlserverName') ,'/elasticpools/', variables('elasticPoolName'))]"
      ],
      "properties": {
        "collation": "[variables('databaseCollation')]",
        "requestedServiceObjectiveName": "ElasticPool",
        "elasticPoolName": "[variables('elasticPoolName')]"
     },
	   "resources": [
			 {
              "name": "default",
              "type": "backupLongTermRetentionPolicies",
              "dependsOn": [
                "[concat('Microsoft.Sql/servers/', variables('sqlServerName'), '/', 'databases', '/', variables('databaseName2'))]"
              ],
              "apiVersion": "2017-03-01-preview",
              "properties": {
                "weeklyRetention": "P5W",
                "monthlyRetention": "P12M",
                "yearlyRetention": "P5Y",
                "weekOfYear": 1
              }
            },
			{ 
				"apiVersion": "2015-05-01-preview", 
				"type": "auditingSettings", 
				"name": "default", 
				"location": "[parameters('location')]", 
				"dependsOn": [ 
					"[concat('Microsoft.Sql/servers/',variables('sqlServerName'))]", 
					"[concat('Microsoft.Sql/servers/',variables('sqlServerName'), '/databases/',variables('databaseName2'))]",	
					"[concat('Microsoft.Storage/storageAccounts/',variables('storageAccountName'))]" 
				], 
				"properties": { 
					"State": "Enabled", 
				"storageEndpoint": "[concat('https://',variables('storageAccountName'),'.blob.core.windows.net')]", 
					"storageAccountAccessKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value]", 
					"retentionDays": 0, 
					"auditActionsAndGroups": [ "SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP", "DATABASE_LOGOUT_GROUP", "USER_CHANGE_PASSWORD_GROUP" ], 
					"storageAccountSubscriptionId": "[subscription().subscriptionId]", 
					"isStorageSecondaryKeyInUse": false 
				} 
			}		
		]	  
    }
  ],
  "outputs": {
    "hostname": {
      "type": "string",
      "value": "[reference(variables('dnsLabelPrefix')).dnsSettings.fqdn]"
		}
	}
}